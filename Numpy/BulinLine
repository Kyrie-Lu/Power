import numpy as np
import matplotlib.pyplot as plt
import datetime as dt
import matplotlib.dates as pld

def dmy2ymd(dmy):
    dmy = str(dmy,encoding='utf-8')
    date = dt.datetime.strptime(dmy,'%d-%m-%Y').date()
    ymd = date.strftime('%Y-%m-%d')
    return ymd

dates , opening_prices , hightest_prices , lowest_prices , closing_prices = np.loadtxt('../day03/data/aapl.csv',
        delimiter=',', usecols=(1,3,4,5,6),unpack=True,dtype='M8[D],f8,f8,f8,f8',converters={1:dmy2ymd})

#格式设置
plt.figure('Bulin',facecolor='gold')
plt.title('Bulin',fontsize=20)
plt.xlabel('dates',fontsize=14)
plt.ylabel('prices',fontsize=14)
plt.tick_params(labelsize=10)

#轴设置
ax = plt.gca()
ax.xaxis.set_major_locator(pld.WeekdayLocator(byweekday=pld.MO))
ax.xaxis.set_minor_locator(pld.DayLocator())
ax.xaxis.set_major_formatter(pld.DateFormatter('%Y %b %d'))
dates = dates.astype(pld.datetime.datetime)

# 颜色设置
rise = opening_prices - closing_prices <= 0.01
fall = opening_prices - closing_prices >=0.01
fc = np.zeros(dates.size , dtype='3f4')
ec = np.zeros(dates.size ,dtype= '3f4')
fc[rise],fc[fall] = (1,1,1),(0,0.5,0)
ec[rise],fc[fall] = (1, 0, 0), (0, 0.5, 0)

# 移动平均线
weight = np.ones(5)
weights = weight / 5
ema5 = np.convolve(closing_prices , weights , 'valid')

# 上下布林线
std = np.zeros(ema5.size)
for i in range(ema5.size):
    std[i] = np.std(closing_prices[i : i + 5])
lowers = ema5 - 2 * std
highers = ema5 + 2 * std

# 图像设置
plt.bar(dates,hightest_prices - lowest_prices ,0 , lowest_prices  , color =fc ,edgecolor = ec)
plt.bar(dates,closing_prices - opening_prices ,0.8 , opening_prices ,  color =fc ,edgecolor = ec )
plt.plot(dates[4:],ema5,c = 'wheat')
plt.plot(dates[4:],lowers,c = 'salmon')
plt.plot(dates[4:],highers,c = 'gold')

plt.gcf().autofmt_xdate()
plt.show()
